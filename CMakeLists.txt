cmake_minimum_required (VERSION 3.21)
project (demo)

set(CMAKE_BUILD_TYPE Debug)
IF(NOT CMAKE_BUILD_TYPE)
	SET(CMAKE_BUILD_TYPE Release)
ENDIF()
MESSAGE("Build type: " ${CMAKE_BUILD_TYPE})
# Check C++11 or C++0x support
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++17" COMPILER_SUPPORTS_CXX17)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
#if(COMPILER_SUPPORTS_CXX17)
        set(CMAKE_CXX_STANDARD 17)
#endif()
INCLUDE_DIRECTORIES($ENV{VULKAN_SDK}/Include)
LINK_DIRECTORIES($ENV{VULKAN_SDK}/Lib)

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/include)
LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/lib)

set(JIGSAW_PUZZLE_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/include)
message(${JIGSAW_PUZZLE_INCLUDE_DIRS})
set(JIGSAW_PUZZLE_LIB_DIRS ${PROJECT_SOURCE_DIR}/lib)
message(${JIGSAW_PUZZLE_LIB_DIRS})

file(COPY ${PROJECT_SOURCE_DIR}/shaders DESTINATION ${PROJECT_SOURCE_DIR}/build/)
#set(CMAKE_INSTALL_PREFIX )
#set(CMAKE_INSTALL_PATH "../LIB")
#set(CMAKE_INSTALL_PATH_USE_LINK_PATH TRUE)
#find_package(glfw3 CONFIG REQUIRED)
#set(INCLUDE_DIRECTORY "include")
#set(LIB_DIRECTORY "lib")
#target_include_directories(Three_kingdoms PRIVATE ${INCLUDE_DIRECTORY})
#target_link_libraries(Three_kingdoms PRIVATE ${LIB_DIRECTORY})
#aux_source_directory(. DIR_SRCS)
file(GLOB JIGSAW_PUZZLE_CPP ${PROJECT_SOURCE_DIR}/*.cpp)
add_executable(demo ${JIGSAW_PUZZLE_CPP})
if(WIN32)
	target_link_libraries(demo PRIVATE vulkan-1 glfw3)
else()
	target_link_libraries(demo PRIVATE pthread vulkan dl glfw3)
endif()
